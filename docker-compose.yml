version: '3'

services:

  redis:
    image: redis:latest
    restart: on-failure
    expose:
      - "6379"

  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5

  web:
    build: .
    command: bash -c "
      python manage.py migrate
      && python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - static_volume:/code/static
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - ./.env
    environment:
      - POSTGRES_HOST=db

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    restart: on-failure
    depends_on:
      - redis
      - db
      - web
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - POSTGRES_HOST=db

  celery-beat:
    build: .
    tty: true
    command: celery -A config beat -l INFO
    restart: on-failure
    depends_on:
      - redis
      - db
      - web
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - POSTGRES_HOST=db


volumes:
  postgres_data:
  static_volume: